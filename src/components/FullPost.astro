---
import {format} from 'date-fns'; 
interface Props {
    id: number,
    href: string,
    avatar: string,
    username: string,
    post_date: string,
    post_body: string,
    post_likes: number,
    user_has_liked: boolean,

}

const {
    id,
    href,
    avatar,
    username,
    post_date,
    post_body,
    post_likes,
    user_has_liked,
    ...rest
} = Astro.props as Props;

---


<div class="post-box" data-post_id={id}>
    <div class="post-flex">
        <div class="post-left">
            <div class="image">
                <a href="#">
                    <img src={avatar} alt={username}>
                </a>
            </div>
        </div>
        <div class="post-main">
            <div class="header">
                <a href="#">{username}</a>
                <div class=posted-on>
                    {format(new Date(post_date), 'MMMM d yyyy - h:mma')}
                </div>
            </div>
            <div class="body">
                <a href=`/posts/post?post=${id}`>
                    {post_body}
                </a>
            </div>
            <div class="footer">
                <div class="interaction">
                    <div class="element like-btn" data-post_id={id}>
                        {user_has_liked ? <i class="bi bi-heart-fill" title="Remove Like"></i> : <i class="bi bi-heart" id="like_null" title="Like"></i>}
                    </div>
                    <div class="element">
                        <i class="bi bi-chat" title="Reply"></i>
                    </div>
                </div>
                <div class="stats">
                    <div class="stat">
                        {post_likes > 0 ? `${post_likes} likes` : null}
                    </div>
                    <div class="stat">
                        10 replies
                    </div>
                </div>
                
            </div>
        </div>
    </div>
</div>

<style lang="scss">
    .post-box{        
        background-color: var(--main-bg);
        border-bottom: 1px solid var(--text-second);
        padding: 0.5em;

        .post-flex{
            display: flex;
            flex-direction: row;
            gap: 1em;

            .post-left{

                .image{
                    width: 50px;
                    height: 50px;
                    overflow: hidden;
                    border-radius: 50%;
                    border: 2px solid steelblue;
                    
                    img{
                        width: 100%;
                        height: 100%;
                        object-fit: cover;
                        object-position: center top;                    
                    }
                }
            }

            .post-main{

                .header{
                    display: flex;
                    flex-direction: row;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 1em;

                    a{
                        color: steelblue;
                        font-size: 1.2rem;
                        text-decoration: none;
                        
                        &:hover{
                            text-decoration: underline;
                        }
                    }

                    .posted-on{
                        color: var(--text-second);
                        font-size: 0.9rem;
                    }

                }

                .body{
                    width: 90%;
                    margin-bottom: 1em;
                    line-height: 1.3;
                    

                    a{
                        text-decoration: none;
                        color: var(--text-second);
                    }
                }

                .footer{
                    display: flex;
                    flex-direction: column;
                    gap: 1em;
                    padding-bottom: 0.5em;

                    .interaction{
                        display: flex;
                        gap: 2em;
                        align-items: center;
                        

                        .element{
                            // border: 1px solid red;
                            width: 30px;
                            height: 30px;
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            border-radius: 3px;
                            transition: all 150ms ease;
                            cursor: pointer;

                            &:nth-child(1):hover > i{
                                color: var(--error);
                            }

                            &:nth-child(2):hover > i{
                                color: steelblue;
                            }

                            i{
                                color: #fff;
                                font-size: 1.2rem;
                                transition: all 150ms ease;
                            }

                            .bi-heart-fill{
                                color: red;
                            }

                        }
                    }

                    .stats{
                        display: flex;
                        gap: 2em;

                        .stat{
                            font-style: italic;
                            color: var(--text-second);
                        }
                    }


                }
            }
        }
    }


</style>

<script>
    $(document).on('click', '.interaction > .like-btn', function(){
        var user_id = '31'
        var post_id = $(this).data('post_id')
        var likeData = new FormData()
        likeData.append('user_id',  user_id);
        
        $.ajax({
            url: `http://127.0.0.1:8000/api/posts/${post_id}/like`,
            method: 'POST',
            dataType: 'json',
            processData: false,
            contentType: false,
            context: this,
            crossDomain: true,
            xhrFields: {
                withCredentials: false,
            },
            data: likeData,

            success: function(response){
                if(response.status === 'post_liked'){
                   $(this).find('i').toggleClass('bi-heart bi-heart-fill')
                }
                if(response.status === 'post_like_removed'){
                    $(this).find('i').toggleClass('bi-heart bi-heart-fill')
                }
            },
            error: function(xhr, status, error){
                console.log(error)
            }
        })

    })
</script>

